{"version":3,"sources":["utils.js"],"names":["utils","node","Array","prototype","slice","call","attributes","forEach","attribute","removeAttribute","name","source","target","setAttribute","value","getCurrentBrowserPathWithoutHash","window","location","hash","pathname","search","url","uri","getPathname","getSearch","getHash","getUrlPathWithoutHash","history","pushState","selector","parent","document","querySelectorAll"],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KASMA,K;;;;;;;uCAOsBC,I,EAAM;AAChCC,UAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BJ,KAAKK,UAAhC,EAA4CC,OAA5C,CAAoD,UAACC,SAAD;AAAA,YAAeP,KAAKQ,eAAL,CAAqBD,UAAUE,IAA/B,CAAf;AAAA,KAApD;AACA;;;sCAOyBC,M,EAAQC,M,EAAQ;AACzCV,UAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BM,OAAOL,UAAlC,EAA8CC,OAA9C,CAAsD,UAACC,SAAD;AAAA,YAAeI,OAAOC,YAAP,CAAoBL,UAAUE,IAA9B,EAAoCF,UAAUM,KAA9C,CAAf;AAAA,KAAtD;AACA;;;2CAO8B;AAC9B,WAAO,KAAKC,gCAAL,KAA0C,kBAAQC,MAAR,CAAeC,QAAf,CAAwBC,IAAzE;AACA;;;sDAOyC;AACzC,WAAO,kBAAQF,MAAR,CAAeC,QAAf,CAAwBE,QAAxB,GAAmC,kBAAQH,MAAR,CAAeC,QAAf,CAAwBG,MAAlE;AACA;;;8BAOiBC,G,EAAK;AACtB,QAAIC,MAAM,kBAAQD,GAAR,CAAV;AACA,WAAOC,IAAIC,WAAJ,KAAoBD,IAAIE,SAAJ,EAApB,GAAsCF,IAAIG,OAAJ,EAA7C;AACA;;;yCAO4BJ,G,EAAK;AACjC,QAAIC,MAAM,kBAAQD,GAAR,CAAV;AACA,WAAOC,IAAIC,WAAJ,KAAoBD,IAAIE,SAAJ,EAA3B;AACA;;;kDAOqCH,G,EAAK;AAC1C,QAAIC,MAAM,kBAAQD,GAAR,CAAV;AACA,WAAOC,IAAIC,WAAJ,EAAP;AACA;;;wCAQ2BF,G,EAAK;AAChC,QAAIA,GAAJ,EAAS;AACR,YAAOrB,MAAM0B,qBAAN,CAA4BL,GAA5B,MAAqC,KAAKN,gCAAL,EAA5C;AACA;AACD,WAAO,KAAP;AACA;;;6CAOgC;AAChC,WAAO,CAAC,EAAE,kBAAQC,MAAR,CAAeW,OAAf,IAA0B,kBAAQX,MAAR,CAAeW,OAAf,CAAuBC,SAAnD,CAAR;AACA;;;oCAOuBC,Q,EAAqC;AAAA,QAA3BC,MAA2B,uEAAlB,kBAAQC,QAAU;;AAC5D,WAAO7B,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2ByB,OAAOE,gBAAP,CAAwBH,QAAxB,CAA3B,CAAP;AACA;;;;;;mBAIa7B,K","file":"utils.js","sourcesContent":["'use strict';\n\nimport globals from '../globals/globals';\nimport Uri from 'metal-uri';\n\n/**\n * A collection of static utility functions.\n * @const\n */\nclass utils {\n\n\t/**\n\t * Removes all attributes form node.\n\t * @return {void}\n\t * @static\n\t */\n\tstatic clearNodeAttributes(node) {\n\t\tArray.prototype.slice.call(node.attributes).forEach((attribute) => node.removeAttribute(attribute.name));\n\t}\n\n\t/**\n\t * Copies attributes form source node to target node.\n\t * @return {void}\n\t * @static\n\t */\n\tstatic copyNodeAttributes(source, target) {\n\t\tArray.prototype.slice.call(source.attributes).forEach((attribute) => target.setAttribute(attribute.name, attribute.value));\n\t}\n\n\t/**\n\t * Gets the current browser path including hashbang.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getCurrentBrowserPath() {\n\t\treturn this.getCurrentBrowserPathWithoutHash() + globals.window.location.hash;\n\t}\n\n\t/**\n\t * Gets the current browser path excluding hashbang.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getCurrentBrowserPathWithoutHash() {\n\t\treturn globals.window.location.pathname + globals.window.location.search;\n\t}\n\n\t/**\n\t * Extracts the path part of an url.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getUrlPath(url) {\n\t\tvar uri = new Uri(url);\n\t\treturn uri.getPathname() + uri.getSearch() + uri.getHash();\n\t}\n\n\t/**\n\t * Extracts the path part of an url without hashbang.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getUrlPathWithoutHash(url) {\n\t\tvar uri = new Uri(url);\n\t\treturn uri.getPathname() + uri.getSearch();\n\t}\n\n\t/**\n\t * Extracts the path part of an url without hashbang and query search.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getUrlPathWithoutHashAndSearch(url) {\n\t\tvar uri = new Uri(url);\n\t\treturn uri.getPathname();\n\t}\n\n\t/**\n\t * Checks if url is in the same browser current url excluding the hashbang.\n\t * @param  {!string} url\n\t * @return {boolean}\n\t * @static\n\t */\n\tstatic isCurrentBrowserPath(url) {\n\t\tif (url) {\n\t\t\treturn utils.getUrlPathWithoutHash(url) === this.getCurrentBrowserPathWithoutHash();\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns true if HTML5 History api is supported.\n\t * @return {boolean}\n\t * @static\n\t */\n\tstatic isHtml5HistorySupported() {\n\t\treturn !!(globals.window.history && globals.window.history.pushState);\n\t}\n\n\t/**\n\t * Queries elements from document and returns an array of elements.\n\t * @param {!string} selector\n\t * @return {array.<Element>}\n\t */\n\tstatic querySelectorAll(selector, parent = globals.document) {\n\t\treturn Array.prototype.slice.call(parent.querySelectorAll(selector));\n\t}\n\n}\n\nexport default utils;\n"]}