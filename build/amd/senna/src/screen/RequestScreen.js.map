{"version":3,"sources":["RequestScreen.js"],"names":["RequestScreen","cacheable","httpHeaders","httpMethod","GET","request","timeout","status","isValidResponseStatusCode","error","Error","INVALID_STATUS","invalidStatus","statusCode","path","redirectPath","getRequestPath","state","senna","form","uri","setHostname","window","location","hostname","setProtocol","protocol","port","setPort","isIeOrEdge","makeUnique","toString","getRequest","requestPath","responseUrl","maybeExtractResponseUrlFromRequest","removeUnique","getUrlPath","cache","getCache","isDefAndNotNull","resolve","body","headers","Object","keys","forEach","add","header","formElement","capturedFormElement","FormData","querySelectorAll","selectors","submitButtons","filter","button","disabled","has","name","append","value","POST","formatLoadPath","then","setRequest","xhr","assertValidResponseStatusCode","isCacheable","addCache","responseText","catch","reason","message","REQUEST_TIMEOUT","REQUEST_ERROR","requestError","responseURL","getResponseHeader","X_REQUEST_URL_HEADER","toLowerCase"],"mappings":"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","file":"RequestScreen.js","sourcesContent":["'use strict';\n\nimport { core } from 'metal';\nimport Ajax from 'metal-ajax';\nimport { MultiMap } from 'metal-structs';\nimport CancellablePromise from 'metal-promise';\nimport errors from '../errors/errors';\nimport utils from '../utils/utils';\nimport globals from '../globals/globals';\nimport Screen from './Screen';\nimport Uri from 'metal-uri';\nimport UA from 'metal-useragent';\n\nclass RequestScreen extends Screen {\n\n\t/**\n\t * Request screen abstract class to perform io operations on descendant\n\t * screens.\n\t * @constructor\n\t * @extends {Screen}\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * @inheritDoc\n\t\t * @default true\n\t\t */\n\t\tthis.cacheable = true;\n\n\t\t/**\n\t\t * Holds default http headers to set on request.\n\t\t * @type {?Object=}\n\t\t * @default {\n\t\t *   'X-PJAX': 'true',\n\t\t *   'X-Requested-With': 'XMLHttpRequest'\n\t\t * }\n\t\t * @protected\n\t\t */\n\t\tthis.httpHeaders = {\n\t\t\t'X-PJAX': 'true',\n\t\t\t'X-Requested-With': 'XMLHttpRequest'\n\t\t};\n\n\t\t/**\n\t\t * Holds default http method to perform the request.\n\t\t * @type {!string}\n\t\t * @default RequestScreen.GET\n\t\t * @protected\n\t\t */\n\t\tthis.httpMethod = RequestScreen.GET;\n\n\t\t/**\n\t\t * Holds the XHR object responsible for the request.\n\t\t * @type {XMLHttpRequest}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.request = null;\n\n\t\t/**\n\t\t * Holds the request timeout in milliseconds.\n\t\t * @type {!number}\n\t\t * @default 30000\n\t\t * @protected\n\t\t */\n\t\tthis.timeout = 30000;\n\t}\n\n\t/**\n\t * Asserts that response status code is valid.\n\t * @param {number} status\n\t * @protected\n\t */\n\tassertValidResponseStatusCode(status) {\n\t\tif (!this.isValidResponseStatusCode(status)) {\n\t\t\tvar error = new Error(errors.INVALID_STATUS);\n\t\t\terror.invalidStatus = true;\n\t\t\terror.statusCode = status;\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tbeforeUpdateHistoryPath(path) {\n\t\tvar redirectPath = this.getRequestPath();\n\t\tif (redirectPath && redirectPath !== path) {\n\t\t\treturn redirectPath;\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tbeforeUpdateHistoryState(state) {\n\t\t// If state is ours and navigate to post-without-redirect-get set\n\t\t// history state to null, that way Senna will reload the page on\n\t\t// popstate since it cannot predict post data.\n\t\tif (state.senna && state.form && state.redirectPath === state.path) {\n\t\t\treturn null;\n\t\t}\n\t\treturn state;\n\t}\n\n\t/**\n\t * Formats load path before invoking ajax call.\n\t * @param {string} path\n\t * @return {string} Formatted path;\n\t * @protected\n\t */\n\tformatLoadPath(path) {\n\t\tvar uri = new Uri(path);\n\n\t\turi.setHostname(globals.window.location.hostname);\n\t\turi.setProtocol(globals.window.location.protocol);\n\n\t\tif (globals.window.location.port) {\n\t\t\turi.setPort(globals.window.location.port);\n\t\t}\n\n\t\tif (UA.isIeOrEdge && this.httpMethod === RequestScreen.GET) {\n\t\t\treturn uri.makeUnique().toString();\n\t\t}\n\n\t\treturn uri.toString();\n\t}\n\n\t/**\n\t * Gets the http headers.\n\t * @return {?Object=}\n\t */\n\tgetHttpHeaders() {\n\t\treturn this.httpHeaders;\n\t}\n\n\t/**\n\t * Gets the http method.\n\t * @return {!string}\n\t */\n\tgetHttpMethod() {\n\t\treturn this.httpMethod;\n\t}\n\n\t/**\n\t * Gets request path.\n\t * @return {string=}\n\t */\n\tgetRequestPath() {\n\t\tvar request = this.getRequest();\n\t\tif (request) {\n\t\t\tvar requestPath = request.requestPath;\n\t\t\tvar responseUrl = this.maybeExtractResponseUrlFromRequest(request);\n\t\t\tif (responseUrl) {\n\t\t\t\trequestPath = responseUrl;\n\t\t\t}\n\t\t\tif (UA.isIeOrEdge && this.httpMethod === RequestScreen.GET) {\n\t\t\t\trequestPath = new Uri(requestPath).removeUnique().toString();\n\t\t\t}\n\t\t\treturn utils.getUrlPath(requestPath);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets the request object.\n\t * @return {?Object}\n\t */\n\tgetRequest() {\n\t\treturn this.request;\n\t}\n\n\t/**\n\t * Gets the request timeout.\n\t * @return {!number}\n\t */\n\tgetTimeout() {\n\t\treturn this.timeout;\n\t}\n\n\t/**\n\t * Checks if response succeeded. Any status code 2xx or 3xx is considered\n\t * valid.\n\t * @param {number} statusCode\n\t */\n\tisValidResponseStatusCode(statusCode) {\n\t\treturn statusCode >= 200 && statusCode <= 399;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tload(path) {\n\t\tvar cache = this.getCache();\n\t\tif (core.isDefAndNotNull(cache)) {\n\t\t\treturn CancellablePromise.resolve(cache);\n\t\t}\n\n\t\tvar body = null;\n\t\tvar httpMethod = this.httpMethod;\n\n\t\tvar headers = new MultiMap();\n\t\tObject.keys(this.httpHeaders).forEach(header => headers.add(header, this.httpHeaders[header]));\n\n\t\tconst formElement = globals.capturedFormElement;\n\t\tif (formElement) {\n\t\t\tbody = new FormData(formElement);\n\t\t\tutils.querySelectorAll(RequestScreen.selectors.submitButtons, formElement)\n\t\t\t\t.filter(button => !(button.disabled || body.has(button.name)))\n\t\t\t\t.forEach(button => body.append(button.name, button.value));\n\t\t\thttpMethod = RequestScreen.POST;\n\t\t\tif (UA.isIeOrEdge) {\n\t\t\t\theaders.add('If-None-Match', '\"0\"');\n\t\t\t}\n\t\t}\n\n\t\tvar requestPath = this.formatLoadPath(path);\n\t\treturn Ajax\n\t\t\t.request(requestPath, httpMethod, body, headers, null, this.timeout)\n\t\t\t.then(xhr => {\n\t\t\t\tthis.setRequest(xhr);\n\t\t\t\tthis.assertValidResponseStatusCode(xhr.status);\n\t\t\t\tif (httpMethod === RequestScreen.GET && this.isCacheable()) {\n\t\t\t\t\tthis.addCache(xhr.responseText);\n\t\t\t\t}\n\t\t\t\txhr.requestPath = requestPath;\n\t\t\t\treturn xhr.responseText;\n\t\t\t})\n\t\t\t.catch((reason) => {\n\t\t\t\tswitch (reason.message) {\n\t\t\t\t\tcase errors.REQUEST_TIMEOUT:\n\t\t\t\t\t\treason.timeout = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase errors.REQUEST_ERROR:\n\t\t\t\t\t\treason.requestError = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthrow reason;\n\t\t\t});\n\t}\n\n\t/**\n\t * The following method tries to extract the response url value by checking\n\t * the custom response header 'X-Request-URL' if proper value is not present\n\t * in XMLHttpRequest. The value of responseURL will be the final URL\n\t * obtained after any redirects. Internet Explorer, Edge and Safari <= 7\n\t * does not yet support the feature. For more information see:\n\t * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseURL\n\t * https://xhr.spec.whatwg.org/#the-responseurl-attribute\n\t * @param {XMLHttpRequest} request\n\t * @return {?string} Response url best match.\n\t */\n\tmaybeExtractResponseUrlFromRequest(request) {\n\t\tvar responseUrl = request.responseURL;\n\t\tif (responseUrl) {\n\t\t\treturn responseUrl;\n\t\t}\n\t\treturn request.getResponseHeader(RequestScreen.X_REQUEST_URL_HEADER);\n\t}\n\n\t/**\n\t * Sets the http headers.\n\t * @param {?Object=} httpHeaders\n\t */\n\tsetHttpHeaders(httpHeaders) {\n\t\tthis.httpHeaders = httpHeaders;\n\t}\n\n\t/**\n\t * Sets the http method.\n\t * @param {!string} httpMethod\n\t */\n\tsetHttpMethod(httpMethod) {\n\t\tthis.httpMethod = httpMethod.toLowerCase();\n\t}\n\n\t/**\n\t * Sets the request object.\n\t * @param {?Object} request\n\t */\n\tsetRequest(request) {\n\t\tthis.request = request;\n\t}\n\n\t/**\n\t * Sets the request timeout in milliseconds.\n\t * @param {!number} timeout\n\t */\n\tsetTimeout(timeout) {\n\t\tthis.timeout = timeout;\n\t}\n\n}\n\n/**\n * Holds value for method get.\n * @type {string}\n * @default 'get'\n * @static\n */\nRequestScreen.GET = 'get';\n\n/**\n * Holds value for method post.\n * @type {string}\n * @default 'post'\n * @static\n */\nRequestScreen.POST = 'post';\n\n/**\n * Helper selectors constructing FormData.\n * @type {object}\n * @protected\n * @static\n */\nRequestScreen.selectors = {\n\tsubmitButtons: 'button[type=\"\"],button[type=\"submit\"],input[type=submit]'\n};\n\n/**\n * Fallback http header to retrieve response request url.\n * @type {string}\n * @default 'X-Request-URL'\n * @static\n */\nRequestScreen.X_REQUEST_URL_HEADER = 'X-Request-URL';\n\nexport default RequestScreen;\n"]}